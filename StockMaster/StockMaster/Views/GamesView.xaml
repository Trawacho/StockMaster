<UserControl x:Class="StockMaster.Views.GamesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:local="clr-namespace:StockMaster.Views"
             xmlns:converters="clr-namespace:StockMaster.Converters"
             xmlns:viewmodels="clr-namespace:StockMaster.ViewModels"
             xmlns:self="clr-namespace:StockMaster.BaseClasses"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance 
                            Type=viewmodels:GamesDesignViewModel, 
                            IsDesignTimeCreatable=True}" 
             d:DesignHeight ="1024"
             d:DesignWidth="1280"
             Background="WhiteSmoke"
             >
    <UserControl.Resources>
        <converters:GamesSortingConverter x:Key="gamesSorter"/>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converters:TeamToOpponentConverter x:Key="teamToOpponentConverter"/>
        <converters:NumberIsEvenToBooleanConverter x:Key="numberIsEvenToBoolenConverter"/>
        <converters:NumberIsGreaterThenOneConverter x:Key="numberIsGreaterThenOneConverter"/>

        <CollectionViewSource x:Key="sortedTeams" Source="{Binding Path=Teams}">
            <CollectionViewSource.SortDescriptions >
                <scm:SortDescription PropertyName="StartNumber" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>


    </UserControl.Resources>
    <Grid Margin="25">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="400"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>



        <TreeView ItemsSource="{Binding Source={StaticResource sortedTeams}}"
                  Grid.Row="0" Grid.Column="0"
                  Grid.RowSpan="3" 
                  Padding="10">
            <TreeView.Resources>

                <HierarchicalDataTemplate DataType="{x:Type self:Team}" x:Name="tlNode"
                                          ItemsSource="{Binding Games, Converter={StaticResource gamesSorter}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="(" />
                        <TextBlock Text="{Binding StartNumber}"/>
                        <TextBlock Text=") " />
                        <TextBlock Text="{Binding TeamName}" />
                    </StackPanel>
                </HierarchicalDataTemplate>

                <DataTemplate DataType="{x:Type self:Game}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Runde: " />
                        <TextBlock Text="{Binding RoundOfGame}"/>
                        <TextBlock Text=" - Spiel: " />
                        <TextBlock Text="{Binding GameNumber}"/>


                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsNotPauseGame, Converter={StaticResource boolToVisibilityConverter}}">
                            <TextBlock Text=" - Bahn: " />
                            <TextBlock Text="{Binding CourtNumber}"/>
                            <TextBlock Text=" - Anspiel: " />
                            <TextBlock Text="{Binding Path=StartingTeam.TeamName}"/>
                            <TextBlock Text=" - Gegner: " />

                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource teamToOpponentConverter}">
                                        <Binding  Path="DataContext" RelativeSource="{RelativeSource 
                                                                        Mode=FindAncestor, 
                                                                        AncestorType={x:Type TreeViewItem}, 
                                                                        AncestorLevel=2}"/>
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource 
                                                                        Mode=FindAncestor, 
                                                                        AncestorType={x:Type TreeViewItem}, 
                                                                        AncestorLevel=1}"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                        </StackPanel>

                        <TextBlock Text=" - Setzt Aus" Visibility="{Binding Path=IsPauseGame, Converter={StaticResource boolToVisibilityConverter}}"/>


                    </StackPanel>
                </DataTemplate>

            </TreeView.Resources>
        </TreeView>

        <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal" Margin="20">
            <Button Content="Erzeuge Spiele" Command="{Binding Path=CreateGamesCommand}" Margin="10" HorizontalAlignment="Right" Padding="10"/>
            <Button Content="Lösche alle Spiele" Command="{Binding Path=RemoveAllGamesCommand}" Margin="10" HorizontalAlignment="Right" Padding="10"/>
        </StackPanel>

        <Grid Grid.Row="0" Grid.Column="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="Margin" Value="10"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="MinWidth" Value="50"/>
                </Style>
            </Grid.Resources>

            <Label Content="Anzahl der Spielrunden:" Grid.Row="0" Grid.Column="0"/>
            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=NumberOfGameRounds, Mode=TwoWay}"/>

            <Label Content="Anzahl der Bahnen:" Grid.Row="1" Grid.Column="0" />
            <Label Grid.Row="1" Grid.Column="1" 
                   Content="{Binding Path=NumberOfCourts, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                   HorizontalContentAlignment="Left"
                   HorizontalAlignment="Left"/>

            <Label Content="Anzahl der Aussetzer:"
                   Grid.Row="2" Grid.Column="0"/>
            <TextBox Text="{Binding Path=NumberOfPauseGames, Mode=TwoWay}"
                     Grid.Row="2" Grid.Column="1"
                     IsEnabled="{Binding Path=RealTeamsCount, Converter={StaticResource numberIsEvenToBoolenConverter}}"
                     ToolTip="0 oder 2 Aussetzer"/>

        </Grid>

        <StackPanel Grid.Row="1" Grid.Column="1">
            <Button Content="Spiegel drucken" Margin="10" Padding="10"
                    Command="{Binding Path=PrintTurnCardsCommand}"/>
        </StackPanel>
        <StackPanel Grid.Row="1" Grid.Column="2">
            <CheckBox Content="Alle Runden zusammenfassen" Margin="10"
                      IsChecked="{Binding Path=ConcatRoundsOnOutput}"
                      IsEnabled="{Binding Path=NumberOfGameRounds, Converter={StaticResource numberIsGreaterThenOneConverter}}"/>
            <CheckBox Content="Teamnamen auf Spiegel drucken" Margin="10"
                      IsChecked="{Binding Path=TeamNameOnTurnCards}"/>
        </StackPanel>
    </Grid>
</UserControl>
